# def summa3(arv1: float,arv2: float,arv3: float)->float:
#     '''Ищем сумму трех чисел
    
#     :param float arv1: первое число
#     :param float arv2: второе число
#     :param float arv3: третье число
#     :rtype: float
#     '''
#     summa = arv1 + arv2 + arv3
#     return summa


# (1)
# Простейшие арифметические операции

# Написать функцию arithmetic, принимающую 3 аргумента: первые 2 - числа, третий - операция, 
# которая должна быть произведена над ними. Если третий аргумент +, сложить их; если —, то вычесть; * — умножить; 
# / — разделить (первое на второе). В остальных случаях вернуть строку "Неизвестная операция".






# 
# 
# (2)
# Високосный год

# Написать функцию is_year_leap, принимающую 1 аргумент — год, и возвращающую True, если год високосный, и False иначе.
# 
# 
# 
# (3)
# Квадрат

# Написать функцию square, принимающую 1 аргумент — сторону квадрата, и возвращающую 3 значения: периметр квадрата, 
# площадь квадрата и диагональ квадрата.
# 
# 
# 
# 
# (4)
# Времена года

# Написать функцию season, принимающую 1 аргумент — номер месяца (от 1 до 12), и возвращающую время года,
# которому этот месяц принадлежит (talv, kevad, suvi или sügis).
# 
# 
# 
# (5)
# Банковский вклад

# Пользователь делает вклад в размере a евро сроком на years лет под 10% годовых 
# (каждый год размер его вклада увеличивается на 10%. Эти деньги прибавляются к сумме вклада, 
# и на них в следующем году тоже будут проценты).

# Написать функцию bank, принимающая аргументы a и years, и возвращающую сумму, которая будет на счету пользователя.
# 
# 
# 
# 
# (6)
# Простые числа

# Написать функцию is_prime, принимающую 1 аргумент — число от 0 до 1000, и возвращающую True, если оно простое, и False - иначе.
# 
# 
# 
# 
# (7)
# Правильная дата

# Написать функцию date, принимающую 3 аргумента — день, месяц и год. Вернуть True, если такая дата есть в нашем календаре, и False иначе.
# 
# 
# 
# 
# (8)*
# XOR-шифрование

# Написать функцию XOR_cipher, принимающая 2 аргумента: строку, которую нужно зашифровать, 
# и ключ шифрования, которая возвращает строку, зашифрованную путем применения функции XOR (^) над символами строки с ключом. 
# Написать также функцию XOR_uncipher, которая по зашифрованной строке и ключу восстанавливает исходную строку.
